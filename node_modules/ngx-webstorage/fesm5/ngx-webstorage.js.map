{"version":3,"file":"ngx-webstorage.js.map","sources":["ng://ngx-webstorage/lib/constants/strategy.ts","ng://ngx-webstorage/lib/helpers/noop.ts","ng://ngx-webstorage/lib/constants/config.ts","ng://ngx-webstorage/lib/helpers/storageKeyManager.ts","ng://ngx-webstorage/lib/core/templates/syncStorage.ts","ng://ngx-webstorage/lib/core/templates/asyncStorage.ts","ng://ngx-webstorage/lib/core/strategyCache.ts","ng://ngx-webstorage/lib/core/nativeStorage.ts","ng://ngx-webstorage/lib/helpers/compat.ts","ng://ngx-webstorage/lib/strategies/baseSyncStorage.ts","ng://ngx-webstorage/lib/strategies/localStorage.ts","ng://ngx-webstorage/lib/strategies/sessionStorage.ts","ng://ngx-webstorage/lib/strategies/inMemory.ts","ng://ngx-webstorage/lib/strategies/index.ts","ng://ngx-webstorage/stubs/storageStrategy.stub.ts","ng://ngx-webstorage/stubs/storage.stub.ts","ng://ngx-webstorage/lib/services/strategyIndex.ts","ng://ngx-webstorage/lib/services/localStorage.ts","ng://ngx-webstorage/lib/services/sessionStorage.ts","ng://ngx-webstorage/lib/helpers/decoratorBuilder.ts","ng://ngx-webstorage/lib/decorators.ts","ng://ngx-webstorage/lib/services/index.ts","ng://ngx-webstorage/lib/module.ts"],"sourcesContent":["export enum StorageStrategies {\r\n\tLocal = 'local_strategy',\r\n\tSession = 'session_strategy',\r\n\tInMemory = 'in_memory_strategy'\r\n}\r\n","export function noop() {}\r\n","export const DefaultPrefix = 'ngx-webstorage';\r\nexport const DefaultSeparator = '|';\r\nexport const DefaultIsCaseSensitive = false;\r\n","import {DefaultIsCaseSensitive, DefaultPrefix, DefaultSeparator} from '../constants/config';\r\nimport {NgxWebstorageConfiguration} from '../config';\r\n\r\nexport class StorageKeyManager {\r\n\t\r\n\tstatic prefix = DefaultPrefix;\r\n\tstatic separator = DefaultSeparator;\r\n\tstatic isCaseSensitive = DefaultIsCaseSensitive;\r\n\t\r\n\tstatic normalize(raw: string) {\r\n\t\traw = StorageKeyManager.isCaseSensitive ? raw : raw.toLowerCase();\r\n\t\treturn `${StorageKeyManager.prefix}${StorageKeyManager.separator}${raw}`;\r\n\t}\r\n\t\r\n\tstatic isNormalizedKey(key: string) {\r\n\t\treturn key.indexOf(StorageKeyManager.prefix + StorageKeyManager.separator) === 0;\r\n\t}\r\n\t\r\n\tstatic setPrefix(prefix: string) {\r\n\t\tStorageKeyManager.prefix = prefix;\r\n\t}\r\n\t\r\n\tstatic setSeparator(separator: string) {\r\n\t\tStorageKeyManager.separator = separator;\r\n\t}\r\n\t\r\n\tstatic setCaseSensitive(enable: boolean) {\r\n\t\tStorageKeyManager.isCaseSensitive = enable;\r\n\t}\r\n\t\r\n\tstatic consumeConfiguration(config: NgxWebstorageConfiguration) {\r\n\t\tif ('prefix' in config) this.setPrefix(config.prefix);\r\n\t\tif ('separator' in config) this.setSeparator(config.separator);\r\n\t\tif ('caseSensitive' in config) this.setCaseSensitive(config.caseSensitive);\r\n\t}\r\n}\r\n","import {StorageStrategy} from '../interfaces/storageStrategy';\r\nimport {noop} from '../../helpers/noop';\r\nimport {StorageService} from '../interfaces/storageService';\r\nimport {StorageKeyManager} from '../../helpers/storageKeyManager';\r\nimport {Observable} from 'rxjs';\r\nimport {distinctUntilChanged, filter, shareReplay, switchMap} from 'rxjs/operators';\r\n\r\nexport class SyncStorage implements StorageService {\r\n\tconstructor(protected strategy: StorageStrategy<any>) {\r\n\t}\r\n\r\n\tretrieve(key: string): any {\r\n\t\tlet value: any;\r\n\t\tthis.strategy.get(StorageKeyManager.normalize(key)).subscribe((result) => value = typeof result === 'undefined' ? null : result);\r\n\t\treturn value;\r\n\t}\r\n\r\n\tstore(key: string, value: any): any {\r\n\t\tthis.strategy.set(StorageKeyManager.normalize(key), value).subscribe(noop);\r\n\t\treturn value;\r\n\t}\r\n\r\n\tclear(key?: string): void {\r\n\t\tif (key !== undefined)\r\n\t\t\tthis.strategy.del(StorageKeyManager.normalize(key)).subscribe(noop);\r\n\t\telse this.strategy.clear().subscribe(noop);\r\n\t}\r\n\r\n\tgetStrategyName(): string {return this.strategy.name; }\r\n\r\n\tobserve(key: string): Observable<any> {\r\n\t\tkey = StorageKeyManager.normalize(key);\r\n\t\treturn this.strategy.keyChanges.pipe(\r\n\t\t\tfilter((changed: string) => changed === null || changed === key),\r\n\t\t\tswitchMap(() => this.strategy.get(key)),\r\n\t\t\tdistinctUntilChanged(),\r\n\t\t\tshareReplay()\r\n\t\t);\r\n\t}\r\n\r\n}\r\n","import {StorageStrategy} from '../interfaces/storageStrategy';\r\nimport {Observable} from 'rxjs';\r\nimport {StorageService} from '../interfaces/storageService';\r\nimport {StorageKeyManager} from '../../helpers/storageKeyManager';\r\nimport {distinctUntilChanged, filter, map, shareReplay, switchMap} from 'rxjs/operators';\r\n\r\nexport class AsyncStorage implements StorageService {\r\n\r\n\tconstructor(protected strategy: StorageStrategy<any>) {\r\n\t}\r\n\r\n\tretrieve(key: string): Observable<any> {\r\n\t\treturn this.strategy.get(StorageKeyManager.normalize(key)).pipe(\r\n\t\t\tmap((value: any) => typeof value === 'undefined' ? null : value)\r\n\t\t);\r\n\t}\r\n\r\n\tstore(key: string, value: any): Observable<any> {\r\n\t\treturn this.strategy.set(StorageKeyManager.normalize(key), value);\r\n\t}\r\n\r\n\tclear(key?: string): Observable<void> {\r\n\t\treturn key !== undefined ? this.strategy.del(StorageKeyManager.normalize(key)) : this.strategy.clear();\r\n\t}\r\n\r\n\tgetStrategyName(): string { return this.strategy.name; }\r\n\r\n\tobserve(key: string): Observable<any> {\r\n\t\tkey = StorageKeyManager.normalize(key);\r\n\t\treturn this.strategy.keyChanges.pipe(\r\n\t\t\tfilter((changed: string) => changed === null || changed === key),\r\n\t\t\tswitchMap(() => this.strategy.get(key)),\r\n\t\t\tdistinctUntilChanged(),\r\n\t\t\tshareReplay()\r\n\t\t);\r\n\t}\r\n}\r\n","import {Injectable} from '@angular/core';\r\n\r\nexport interface StrategyCache {\r\n\t[key: string]: any;\r\n}\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class StrategyCacheService {\r\n\r\n\tprotected caches: { [name: string]: StrategyCache } = {};\r\n\r\n\tget(strategyName: string, key: string) {\r\n\t\treturn this.getCacheStore(strategyName)[key];\r\n\t}\r\n\r\n\tset(strategyName: string, key: string, value: any) {\r\n\t\tthis.getCacheStore(strategyName)[key] = value;\r\n\t}\r\n\r\n\tdel(strategyName: string, key: string) {\r\n\t\tdelete this.getCacheStore(strategyName)[key];\r\n\t}\r\n\r\n\tclear(strategyName: string) {\r\n\t\tthis.caches[strategyName] = {} as StrategyCache;\r\n\t}\r\n\r\n\tprotected getCacheStore(strategyName: string): StrategyCache {\r\n\t\tif (strategyName in this.caches) return this.caches[strategyName];\r\n\t\treturn this.caches[strategyName] = {} as StrategyCache;\r\n\t}\r\n}\r\n","import {FactoryProvider, InjectionToken} from '@angular/core';\r\nimport {WebStorage} from './interfaces/webStorage';\r\n\r\nexport const LOCAL_STORAGE: InjectionToken<WebStorage> = new InjectionToken<WebStorage>('window_local_storage');\r\n\r\nexport function getLocalStorage() {\r\n\treturn (typeof window !== 'undefined') ? window.localStorage : null;\r\n}\r\n\r\nexport const LocalStorageProvider: FactoryProvider = {provide: LOCAL_STORAGE, useFactory: getLocalStorage};\r\n\r\nexport const SESSION_STORAGE: InjectionToken<WebStorage> = new InjectionToken<WebStorage>('window_session_storage');\r\n\r\nexport function getSessionStorage() {\r\n\treturn (typeof window !== 'undefined') ? window.sessionStorage : null;\r\n}\r\n\r\nexport const SessionStorageProvider: FactoryProvider = {provide: SESSION_STORAGE, useFactory: getSessionStorage};\r\n","import {WebStorage} from '../core/interfaces/webStorage';\r\n\r\nexport class CompatHelper {\r\n\r\n\tstatic isStorageAvailable(storage: WebStorage): boolean {\r\n\t\tlet available = true;\r\n\t\ttry {\r\n\t\t\tif (typeof storage === 'object') {\r\n\t\t\t\tstorage.setItem('test-storage', 'foobar');\r\n\t\t\t\tstorage.removeItem('test-storage');\r\n\t\t\t}\r\n\t\t\telse available = false;\r\n\t\t} catch(e) {\r\n\t\t\tavailable = false;\r\n\t\t}\r\n\t\treturn available;\r\n\t}\r\n\r\n}\r\n\r\n","import {StorageStrategy} from '../core/interfaces/storageStrategy';\r\nimport {Observable, of, Subject} from 'rxjs';\r\nimport {StrategyCacheService} from '../core/strategyCache';\r\nimport {CompatHelper} from '../helpers/compat';\r\nimport {WebStorage} from '../core/interfaces/webStorage';\r\n\r\nexport abstract class BaseSyncStorageStrategy implements StorageStrategy<any> {\r\n\treadonly keyChanges: Subject<string> = new Subject();\r\n\t\r\n\tconstructor(protected storage: WebStorage, protected cache: StrategyCacheService) {}\r\n\t\r\n\tprotected _isAvailable: boolean;\r\n\t\r\n\tget isAvailable(): boolean {\r\n\t\tif (this._isAvailable === undefined) this._isAvailable = CompatHelper.isStorageAvailable(this.storage);\r\n\t\treturn this._isAvailable;\r\n\t}\r\n\t\r\n\tabstract readonly name: string;\r\n\t\r\n\tget(key: string): Observable<any> {\r\n\t\tlet data: any = this.cache.get(this.name, key);\r\n\t\tif (data !== undefined) return of(data);\r\n\t\t\r\n\t\ttry {\r\n\t\t\tconst item: any = this.storage.getItem(key);\r\n\t\t\tif (item !== null) {\r\n\t\t\t\tdata = JSON.parse(item);\r\n\t\t\t\tthis.cache.set(this.name, key, data);\r\n\t\t\t}\r\n\t\t} catch(err) {\r\n\t\t\tconsole.warn(err);\r\n\t\t}\r\n\t\t\r\n\t\treturn of(data);\r\n\t}\r\n\t\r\n\tset(key: string, value: any): Observable<any> {\r\n\t\tconst data: string = JSON.stringify(value);\r\n\t\tthis.storage.setItem(key, data);\r\n\t\tthis.cache.set(this.name, key, value);\r\n\t\tthis.keyChanges.next(key);\r\n\t\treturn of(value);\r\n\t}\r\n\t\r\n\tdel(key: string): Observable<void> {\r\n\t\tthis.storage.removeItem(key);\r\n\t\tthis.cache.del(this.name, key);\r\n\t\tthis.keyChanges.next(key);\r\n\t\treturn of(null);\r\n\t}\r\n\t\r\n\tclear(): Observable<void> {\r\n\t\tthis.storage.clear();\r\n\t\tthis.cache.clear(this.name);\r\n\t\tthis.keyChanges.next(null);\r\n\t\treturn of(null);\r\n\t}\r\n\t\r\n}\r\n","import {StrategyCacheService} from '../core/strategyCache';\r\nimport {BaseSyncStorageStrategy} from './baseSyncStorage';\r\nimport {Inject, NgZone, PLATFORM_ID} from '@angular/core';\r\nimport {LOCAL_STORAGE} from '../core/nativeStorage';\r\nimport {StorageStrategies} from '../constants/strategy';\r\nimport {isPlatformBrowser} from '@angular/common';\r\nimport {WebStorage} from '../core/interfaces/webStorage';\r\n\r\nexport class LocalStorageStrategy extends BaseSyncStorageStrategy {\r\n\tstatic readonly strategyName: string = StorageStrategies.Local;\r\n\treadonly name: string = LocalStorageStrategy.strategyName;\r\n\r\n\tconstructor(@Inject(LOCAL_STORAGE) protected storage: WebStorage,\r\n\t            protected cache: StrategyCacheService,\r\n\t            @Inject(PLATFORM_ID) protected platformId: any,\r\n\t            protected zone: NgZone) {\r\n\t\tsuper(storage, cache);\r\n\t\tif (isPlatformBrowser(this.platformId)) this.listenExternalChanges();\r\n\t}\r\n\r\n\tprotected listenExternalChanges() {\r\n\t\twindow.addEventListener('storage', (event: StorageEvent) => this.zone.run(() => {\r\n\t\t\tif (event.storageArea !== this.storage) return;\r\n\t\t\tconst key: string = event.key;\r\n\t\t\tif (key !== null) this.cache.del(this.name, event.key);\r\n\t\t\telse this.cache.clear(this.name);\r\n\t\t\tthis.keyChanges.next(key);\r\n\t\t}));\r\n\t}\r\n\r\n}\r\n","import {StrategyCacheService} from '../core/strategyCache';\r\nimport {BaseSyncStorageStrategy} from './baseSyncStorage';\r\nimport {Inject, NgZone, PLATFORM_ID} from '@angular/core';\r\nimport {SESSION_STORAGE} from '../core/nativeStorage';\r\nimport {StorageStrategies} from '../constants/strategy';\r\nimport {isPlatformBrowser} from '@angular/common';\r\nimport {WebStorage} from '../core/interfaces/webStorage';\r\n\r\nexport class SessionStorageStrategy extends BaseSyncStorageStrategy {\r\n\tstatic readonly strategyName: string = StorageStrategies.Session;\r\n\treadonly name: string = SessionStorageStrategy.strategyName;\r\n\r\n\tconstructor(@Inject(SESSION_STORAGE) protected storage: WebStorage,\r\n\t            protected cache: StrategyCacheService,\r\n\t            @Inject(PLATFORM_ID) protected platformId: any,\r\n\t            protected zone: NgZone) {\r\n\t\tsuper(storage, cache);\r\n\t\tif (isPlatformBrowser(this.platformId)) this.listenExternalChanges();\r\n\t}\r\n\r\n\tprotected listenExternalChanges() {\r\n\t\twindow.addEventListener('storage', (event: StorageEvent) => this.zone.run(() => {\r\n\t\t\tif (event.storageArea !== this.storage) return;\r\n\t\t\tconst key: string = event.key;\r\n\t\t\tif (event.key !== null) this.cache.del(this.name, event.key);\r\n\t\t\telse this.cache.clear(this.name);\r\n\t\t\tthis.keyChanges.next(key);\r\n\t\t}));\r\n\t}\r\n\r\n}\r\n","import {StorageStrategy} from '../core/interfaces/storageStrategy';\r\nimport {Observable, of, Subject} from 'rxjs';\r\nimport {StrategyCacheService} from '../core/strategyCache';\r\nimport {StorageStrategies} from '../constants/strategy';\r\nimport {Inject} from '@angular/core';\r\n\r\nexport class InMemoryStorageStrategy implements StorageStrategy<any> {\r\n\tstatic readonly strategyName: string = StorageStrategies.InMemory;\r\n\treadonly keyChanges: Subject<string> = new Subject();\r\n\tisAvailable: boolean = true;\r\n\treadonly name: string = InMemoryStorageStrategy.strategyName;\r\n\r\n\tconstructor(@Inject(StrategyCacheService) protected cache: StrategyCacheService) {}\r\n\r\n\tget(key: string): Observable<any> {\r\n\t\treturn of(this.cache.get(this.name, key));\r\n\t}\r\n\r\n\tset(key: string, value: any): Observable<any> {\r\n\t\tthis.cache.set(this.name, key, value);\r\n\t\tthis.keyChanges.next(key);\r\n\t\treturn of(value);\r\n\t}\r\n\r\n\tdel(key: string): Observable<void> {\r\n\t\tthis.cache.del(this.name, key);\r\n\t\tthis.keyChanges.next(key);\r\n\t\treturn of(null);\r\n\t}\r\n\r\n\tclear(): Observable<void> {\r\n\t\tthis.cache.clear(this.name);\r\n\t\tthis.keyChanges.next(null);\r\n\t\treturn of(null);\r\n\t}\r\n\r\n}\r\n","import {InjectionToken, Provider} from '@angular/core';\r\nimport {StorageStrategy} from '../core/interfaces/storageStrategy';\r\nimport {LocalStorageStrategy} from './localStorage';\r\nimport {SessionStorageStrategy} from './sessionStorage';\r\nimport {InMemoryStorageStrategy} from './inMemory';\r\n\r\nexport const STORAGE_STRATEGIES: InjectionToken<StorageStrategy<any>> = new InjectionToken<StorageStrategy<any>>('STORAGE_STRATEGIES');\r\n\r\nexport const Strategies: Provider[] = [\r\n\t{provide: STORAGE_STRATEGIES, useClass: InMemoryStorageStrategy, multi: true},\r\n\t{provide: STORAGE_STRATEGIES, useClass: LocalStorageStrategy, multi: true},\r\n\t{provide: STORAGE_STRATEGIES, useClass: SessionStorageStrategy, multi: true},\r\n];\r\n","import {Observable, of, Subject} from 'rxjs';\r\nimport {StorageStrategy} from '../lib/core/interfaces/storageStrategy';\r\nimport {Optional} from '@angular/core';\r\n\r\nexport const StorageStrategyStubName: string = 'stub_strategy';\r\n\r\nexport class StorageStrategyStub implements StorageStrategy<any> {\r\n\r\n\treadonly keyChanges: Subject<string> = new Subject();\r\n\tpublic store: any = {};\r\n\tpublic _available: boolean = true;\r\n\treadonly name: string;\r\n\r\n\tconstructor(@Optional() name?: string) {\r\n\t\tthis.name = name || StorageStrategyStubName;\r\n\t}\r\n\r\n\tget isAvailable(): boolean {\r\n\t\treturn this._available;\r\n\t}\r\n\r\n\tget(key: string): Observable<any> {\r\n\t\treturn of(this.store[key]);\r\n\t}\r\n\r\n\tset(key: string, value: any): Observable<any> {\r\n\t\tthis.store[key] = value;\r\n\t\tthis.keyChanges.next(key);\r\n\t\treturn of(value);\r\n\t}\r\n\r\n\tdel(key: string): Observable<void> {\r\n\t\tdelete this.store[key];\r\n\t\tthis.keyChanges.next(key);\r\n\t\treturn of(null);\r\n\t}\r\n\r\n\tclear(): Observable<void> {\r\n\t\tthis.store = {};\r\n\t\tthis.keyChanges.next(null);\r\n\t\treturn of(null);\r\n\t}\r\n\r\n}\r\n","import {WebStorage} from '../lib/core/interfaces/webStorage';\r\n\r\nexport class StorageStub implements WebStorage {\r\n\t[name: string]: any;\r\n\r\n\tpublic store: { [prop: string]: any } = {};\r\n\r\n\tget length(): number {\r\n\t\treturn Object.keys(this.store).length;\r\n\t}\r\n\r\n\tclear(): void {\r\n\t\tthis.store = {};\r\n\t}\r\n\r\n\tgetItem(key: string): string | null {\r\n\t\treturn this.store[key] || null;\r\n\t}\r\n\r\n\tkey(index: number): string | null {\r\n\t\treturn Object.keys(this.store)[index];\r\n\t}\r\n\r\n\tremoveItem(key: string): void {\r\n\t\tdelete this.store[key];\r\n\t}\r\n\r\n\tsetItem(key: string, value: string): void {\r\n\t\tthis.store[key] = value;\r\n\t}\r\n\r\n}\r\n","import {StorageStrategy} from '../core/interfaces/storageStrategy';\r\nimport {Subject} from 'rxjs';\r\nimport {Inject, Injectable, Optional} from '@angular/core';\r\nimport {STORAGE_STRATEGIES} from '../strategies';\r\nimport {StorageStrategies} from '../constants/strategy';\r\n\r\nexport const InvalidStrategyError = 'invalid_strategy';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class StrategyIndex {\r\n\r\n\tstatic index: { [name: string]: StorageStrategy<any> } = {};\r\n\treadonly registration$: Subject<string> = new Subject();\r\n\r\n\tconstructor(@Optional() @Inject(STORAGE_STRATEGIES) protected strategies: StorageStrategy<any>[]) {\r\n\t\tif (!strategies) strategies = [];\r\n\t\tthis.strategies = strategies.reverse()\r\n\t\t\t.map((strategy: StorageStrategy<any>, index, arr) => strategy.name)\r\n\t\t\t.map((name: string, index, arr) => arr.indexOf(name) === index ? index : null)\r\n\t\t\t.filter((index: number) => index !== null)\r\n\t\t\t.map((index: number) => strategies[index]);\r\n\t}\r\n\r\n\tstatic get(name: string): StorageStrategy<any> {\r\n\t\tif (!this.isStrategyRegistered(name)) throw Error(InvalidStrategyError);\r\n\t\tlet strategy: StorageStrategy<any> = StrategyIndex.index[name];\r\n\t\tif (!strategy.isAvailable) {\r\n\t\t\tstrategy = StrategyIndex.index[StorageStrategies.InMemory];\r\n\t\t}\r\n\t\treturn strategy;\r\n\t}\r\n\r\n\tstatic set(name: string, strategy): void {\r\n\t\tStrategyIndex.index[name] = strategy;\r\n\t}\r\n\r\n\tstatic clear(name?: string): void {\r\n\t\tif (name !== undefined) delete StrategyIndex.index[name];\r\n\t\telse StrategyIndex.index = {};\r\n\t}\r\n\r\n\tstatic isStrategyRegistered(name: string): boolean {\r\n\t\treturn name in StrategyIndex.index;\r\n\t}\r\n\r\n\tstatic hasRegistredStrategies(): boolean {\r\n\t\treturn Object.keys(StrategyIndex.index).length > 0;\r\n\t}\r\n\r\n\tpublic getStrategy(name: string): StorageStrategy<any> {\r\n\t\treturn StrategyIndex.get(name);\r\n\t}\r\n\r\n\tpublic indexStrategies() {\r\n\t\tthis.strategies.forEach((strategy: StorageStrategy<any>) => this.register(strategy.name, strategy));\r\n\t}\r\n\r\n\tpublic indexStrategy(name: string, overrideIfExists: boolean = false): StorageStrategy<any> {\r\n\t\tif (StrategyIndex.isStrategyRegistered(name) && !overrideIfExists) return StrategyIndex.get(name);\r\n\t\tconst strategy: StorageStrategy<any> = this.strategies.find((strategy: StorageStrategy<any>) => strategy.name === name);\r\n\t\tif (!strategy) throw new Error(InvalidStrategyError);\r\n\t\tthis.register(name, strategy, overrideIfExists);\r\n\t\treturn strategy;\r\n\t}\r\n\r\n\tpublic register(name: string, strategy: StorageStrategy<any>, overrideIfExists: boolean = false) {\r\n\t\tif (!StrategyIndex.isStrategyRegistered(name) || overrideIfExists) {\r\n\t\t\tStrategyIndex.set(name, strategy);\r\n\t\t\tthis.registration$.next(name);\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\n","import {FactoryProvider} from '@angular/core';\r\nimport {SyncStorage} from '../core/templates/syncStorage';\r\nimport {StrategyIndex} from './strategyIndex';\r\nimport {StorageStrategy} from '../core/interfaces/storageStrategy';\r\nimport {StorageStrategies} from '../constants/strategy';\r\n\r\nexport class LocalStorageService extends SyncStorage {}\r\n\r\nexport function buildService(index: StrategyIndex) {\r\n\tconst strategy: StorageStrategy<any> = index.indexStrategy(StorageStrategies.Local);\r\n\treturn new SyncStorage(strategy);\r\n}\r\n\r\nexport const LocalStorageServiceProvider: FactoryProvider = {\r\n\tprovide: LocalStorageService,\r\n\tuseFactory: buildService,\r\n\tdeps: [StrategyIndex]\r\n};\r\n","import {FactoryProvider} from '@angular/core';\r\nimport {SyncStorage} from '../core/templates/syncStorage';\r\nimport {StrategyIndex} from './strategyIndex';\r\nimport {StorageStrategy} from '../core/interfaces/storageStrategy';\r\nimport {StorageStrategies} from '../constants/strategy';\r\n\r\nexport class SessionStorageService extends SyncStorage {}\r\n\r\nexport function buildService(index: StrategyIndex) {\r\n\tconst strategy: StorageStrategy<any> = index.indexStrategy(StorageStrategies.Session);\r\n\treturn new SyncStorage(strategy);\r\n}\r\n\r\nexport const SessionStorageServiceProvider: FactoryProvider = {\r\n\tprovide: SessionStorageService,\r\n\tuseFactory: buildService,\r\n\tdeps: [StrategyIndex]\r\n};\r\n","import {StrategyIndex} from '../services/strategyIndex';\r\nimport {StorageStrategies} from '../constants/strategy';\r\nimport {StorageKeyManager} from './storageKeyManager';\r\nimport {noop} from './noop';\r\n\r\nexport class DecoratorBuilder {\r\n\t\r\n\tstatic buildSyncStrategyDecorator(strategyName: string | StorageStrategies, prototype, propName: string, key?: string, defaultValue: any = null) {\r\n\t\tconst rawKey: string = key || propName;\r\n\t\tlet storageKey: string;\r\n\t\t\r\n\t\tObject.defineProperty(prototype, propName, {\r\n\t\t\tget: function() {\r\n\t\t\t\tlet value: any;\r\n\t\t\t\tStrategyIndex.get(strategyName).get(getKey()).subscribe((result) => value = result);\r\n\t\t\t\treturn value === undefined ? defaultValue : value;\r\n\t\t\t},\r\n\t\t\tset: function(value) {\r\n\t\t\t\tStrategyIndex.get(strategyName).set(getKey(), value).subscribe(noop);\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\tfunction getKey() {\r\n\t\t\tif (storageKey !== undefined) return storageKey;\r\n\t\t\treturn storageKey = StorageKeyManager.normalize(rawKey);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n","import {StorageStrategies} from './constants/strategy';\r\nimport {DecoratorBuilder} from './helpers/decoratorBuilder';\r\n\r\nexport function LocalStorage(key?: string, defaultValue?: any) {\r\n\treturn function(prototype, propName) {\r\n\t\tDecoratorBuilder.buildSyncStrategyDecorator(StorageStrategies.Local, prototype, propName, key, defaultValue);\r\n\t};\r\n}\r\n\r\nexport function SessionStorage(key?: string, defaultValue?: any) {\r\n\treturn function(prototype, propName) {\r\n\t\tDecoratorBuilder.buildSyncStrategyDecorator(StorageStrategies.Session, prototype, propName, key, defaultValue);\r\n\t};\r\n}\r\n","import {LocalStorageServiceProvider} from './localStorage';\nimport {Provider} from '@angular/core';\nimport {SessionStorageServiceProvider} from './sessionStorage';\n\nexport const Services: Provider[] = [\n\tLocalStorageServiceProvider,\n\tSessionStorageServiceProvider\n];\n","import {APP_INITIALIZER, Inject, InjectionToken, ModuleWithProviders, NgModule, Optional} from '@angular/core';\nimport {LocalStorageProvider, SessionStorageProvider} from './core/nativeStorage';\nimport {Services} from './services/index';\nimport {Strategies} from './strategies/index';\nimport {StrategyIndex} from './services/strategyIndex';\nimport {NgxWebstorageConfiguration} from './config';\nimport {StorageKeyManager} from './helpers/storageKeyManager';\n\nexport const LIB_CONFIG: InjectionToken<NgxWebstorageConfiguration> = new InjectionToken<NgxWebstorageConfiguration>('ngx_webstorage_config');\n\nexport function appInit(index: StrategyIndex) {\n\tindex.indexStrategies();\n\treturn () => StrategyIndex.index;\n}\n\n@NgModule({})\nexport class NgxWebstorageModule {\n\n\tconstructor(index: StrategyIndex, @Optional() @Inject(LIB_CONFIG) config: NgxWebstorageConfiguration) {\n\t\tif (config) StorageKeyManager.consumeConfiguration(config);\n\t\telse console.error('NgxWebstorage : Possible misconfiguration (The forRoot method usage is mandatory since the 3.0.0)');\n\t}\n\n\tstatic forRoot(config: NgxWebstorageConfiguration = {}): ModuleWithProviders {\n\t\treturn {\n\t\t\tngModule: NgxWebstorageModule,\n\t\t\tproviders: [\n\t\t\t\t{\n\t\t\t\t\tprovide: LIB_CONFIG,\n\t\t\t\t\tuseValue: config,\n\t\t\t\t},\n\t\t\t\tLocalStorageProvider,\n\t\t\t\tSessionStorageProvider,\n\t\t\t\t...Services,\n\t\t\t\t...Strategies,\n\t\t\t\t{\n\t\t\t\t\tprovide: APP_INITIALIZER,\n\t\t\t\t\tuseFactory: appInit,\n\t\t\t\t\tdeps: [StrategyIndex],\n\t\t\t\t\tmulti: true\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\t}\n\n}\n"],"names":["tslib_1.__extends","buildService"],"mappings":"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"}
